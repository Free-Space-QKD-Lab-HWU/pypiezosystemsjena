{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PyPiezosystemsJena","text":"<p>Wrapper/interface to control PSJ NV200D/Net piezo drivers</p> <p>Example</p> <pre><code>import pypiezosystemsjena as psj\n\nnv = psj.NV200D(psj.Connection.usb, port=\"/dev/ttyUSB1\")\n\nprint(nv)\n</code></pre> <p>Success</p> <pre><code>NV200D attached on /dev/ttyUSB0\nDevice status:\n               actuator connected : True\n                      sensor type : SensorType.capacitve_sensor\n                        loop mode : LoopMode.closed\n              notch filter active : False\n         signal processing active : True\n       amplifier channels bridged : True\n             temperature too high : False\n                   actuator error : False\n                   hardware error : False\n                        i2c error : False\nlower control value limit reached : False\nupper control value limit reached : False\n          Temperature (heat sink) : 28.677 C\n</code></pre>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#pypiezosystemsjena.NV200D","title":"pypiezosystemsjena.NV200D","text":"<pre><code>NV200D(\n    connection: Connection,\n    port: str = None,\n    ip_address: str = None,\n    mac_address: str = None,\n)\n</code></pre> <p>A wrapper for class for the Piezosystems Jena NV200D (Net) piezo controller</p> <p>Parameters:</p> <ul> <li> <code>connection</code>             (<code>Connection</code>)         \u2013          <p>type of connection with device</p> </li> <li> <code>port</code>             (<code>Optional[str]</code>, default:                 <code>None</code> )         \u2013          <p>serial port</p> </li> <li> <code>ip_address</code>             (<code>Optional[str]</code>, default:                 <code>None</code> )         \u2013          <p>i.p. address to find device</p> </li> <li> <code>mac_address</code>             (<code>Optional[str]</code>, default:                 <code>None</code> )         \u2013          <p>mac address to search for</p> </li> </ul> <p>Examples:</p> <p>Connection to an NV200 can be done via either serial or telnet.</p> Serial PortI.P. AddressSearch by MAC address <pre><code>nv = NV200D(psj.Connection.usb, port=\"/dev/ttyUSB0\")\n</code></pre> <pre><code>nv = NV200D(psj.Connection.ethernet, port=\"/dev/ttyUSB0\")\n</code></pre> <pre><code>nv = NV200D(psj.Connection.ethernet, mac_address=\"aa:bb:cc:dd:ee:ff:gg:hh\")\n</code></pre>"},{"location":"api/#pypiezosystemsjena.NV200D-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.NV200D.PID_feedforward_control_amplification","title":"PID_feedforward_control_amplification  <code>property</code> <code>writable</code>","text":"<pre><code>PID_feedforward_control_amplification: Tuple[\n    float, float, float\n]\n</code></pre> <p>Feed forward control amplification for position, velocity and acceleration</p> <p>Returns:</p> <ul> <li> <code>Tuple[float, float, float]</code>         \u2013          <p>A tuple of PID factors in the order (            position, velocity, acceleration)</p> </li> </ul>"},{"location":"api/#pypiezosystemsjena.NV200D.PID_mode","title":"PID_mode  <code>property</code> <code>writable</code>","text":"<pre><code>PID_mode: LoopMode\n</code></pre> <p>PID open or closed loop mode</p>"},{"location":"api/#pypiezosystemsjena.NV200D.control_mode","title":"control_mode  <code>property</code> <code>writable</code>","text":"<pre><code>control_mode: ControlMode\n</code></pre> <p>Access control mode of NV200D</p>"},{"location":"api/#pypiezosystemsjena.NV200D.data_recorder_autostart","title":"data_recorder_autostart  <code>property</code> <code>writable</code>","text":"<pre><code>data_recorder_autostart: DataRecorderStartMode\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.data_recorder_buffer_length","title":"data_recorder_buffer_length  <code>property</code>","text":"<pre><code>data_recorder_buffer_length: int\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.data_recorder_source","title":"data_recorder_source  <code>property</code> <code>writable</code>","text":"<pre><code>data_recorder_source: Tuple[\n    DataRecorderBuffer, DataRecorderSource\n]\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.data_recorder_stride","title":"data_recorder_stride  <code>property</code> <code>writable</code>","text":"<pre><code>data_recorder_stride: int\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.fenable","title":"fenable  <code>property</code> <code>writable</code>","text":"<pre><code>fenable: bool\n</code></pre> <p>Enable cycling through entire piezo voltage range during startup</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_desired_position_profile_frequency_domain","title":"ilc_desired_position_profile_frequency_domain  <code>property</code>","text":"<pre><code>ilc_desired_position_profile_frequency_domain\n</code></pre> <p>Desired position profile in frequency domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_learning_function_frequency_domain","title":"ilc_learning_function_frequency_domain  <code>property</code>","text":"<pre><code>ilc_learning_function_frequency_domain\n</code></pre> <p>Learning function in frequency domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_learning_limit","title":"ilc_learning_limit  <code>property</code> <code>writable</code>","text":"<pre><code>ilc_learning_limit: float\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_learning_rate","title":"ilc_learning_rate  <code>property</code> <code>writable</code>","text":"<pre><code>ilc_learning_rate: float\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_measured_position_profile_frequency_domain","title":"ilc_measured_position_profile_frequency_domain  <code>property</code>","text":"<pre><code>ilc_measured_position_profile_frequency_domain\n</code></pre> <p>Measured position profile in frequency domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_number_of_basic_scans","title":"ilc_number_of_basic_scans  <code>property</code> <code>writable</code>","text":"<pre><code>ilc_number_of_basic_scans: int\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_number_of_frequency_components","title":"ilc_number_of_frequency_components  <code>property</code> <code>writable</code>","text":"<pre><code>ilc_number_of_frequency_components: int\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_number_of_subsamples","title":"ilc_number_of_subsamples  <code>property</code> <code>writable</code>","text":"<pre><code>ilc_number_of_subsamples: int\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_piezo_current_profile_1_profile","title":"ilc_piezo_current_profile_1_profile  <code>property</code>","text":"<pre><code>ilc_piezo_current_profile_1_profile\n</code></pre> <p>Piezo current_profile_1 profile in time domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_piezo_current_profile_2_profile","title":"ilc_piezo_current_profile_2_profile  <code>property</code>","text":"<pre><code>ilc_piezo_current_profile_2_profile\n</code></pre> <p>Piezo current_profile_2 profile in time domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_piezo_measured_position_profile","title":"ilc_piezo_measured_position_profile  <code>property</code>","text":"<pre><code>ilc_piezo_measured_position_profile\n</code></pre> <p>Piezo measured_position profile in time domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_piezo_voltage_profile","title":"ilc_piezo_voltage_profile  <code>property</code>","text":"<pre><code>ilc_piezo_voltage_profile\n</code></pre> <p>Piezo voltage profile in time domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.ilc_voltage_profile_frequency_domain","title":"ilc_voltage_profile_frequency_domain  <code>property</code>","text":"<pre><code>ilc_voltage_profile_frequency_domain\n</code></pre> <p>Voltage profile in frequency domain</p>"},{"location":"api/#pypiezosystemsjena.NV200D.initial_actuator_position","title":"initial_actuator_position  <code>property</code> <code>writable</code>","text":"<pre><code>initial_actuator_position: int\n</code></pre> <p>Initial actuator position after power-up</p>"},{"location":"api/#pypiezosystemsjena.NV200D.lower_motion_range_limit","title":"lower_motion_range_limit  <code>property</code>","text":"<pre><code>lower_motion_range_limit: float\n</code></pre> <p>Lower motion range limit of piezo</p>"},{"location":"api/#pypiezosystemsjena.NV200D.lower_voltage_range_limit","title":"lower_voltage_range_limit  <code>property</code>","text":"<pre><code>lower_voltage_range_limit: float\n</code></pre> <p>Lower voltage range limit of piezo</p>"},{"location":"api/#pypiezosystemsjena.NV200D.measured_current","title":"measured_current  <code>property</code>","text":"<pre><code>measured_current: Tuple[float, float]\n</code></pre> <p>Measured piezo current on each channel</p>"},{"location":"api/#pypiezosystemsjena.NV200D.modulation_source","title":"modulation_source  <code>property</code> <code>writable</code>","text":"<pre><code>modulation_source: ModulationSource\n</code></pre> <p>Source of signal for setpoint</p>"},{"location":"api/#pypiezosystemsjena.NV200D.monitor_source","title":"monitor_source  <code>property</code> <code>writable</code>","text":"<pre><code>monitor_source: MonitorSource\n</code></pre> <p>Source of data for analogue output</p>"},{"location":"api/#pypiezosystemsjena.NV200D.recording","title":"recording  <code>property</code> <code>writable</code>","text":"<pre><code>recording: bool\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.slew_rate","title":"slew_rate  <code>property</code> <code>writable</code>","text":"<pre><code>slew_rate: float\n</code></pre> <p>Maximum slew rate</p>"},{"location":"api/#pypiezosystemsjena.NV200D.spi_control_loop_interupt_source","title":"spi_control_loop_interupt_source  <code>property</code> <code>writable</code>","text":"<pre><code>spi_control_loop_interupt_source: SPIControlLoopInterupt\n</code></pre> <p>doc</p>"},{"location":"api/#pypiezosystemsjena.NV200D.status","title":"status  <code>property</code>","text":"<pre><code>status: dict\n</code></pre> <p>Get the current status of the controller</p>"},{"location":"api/#pypiezosystemsjena.NV200D.temperature","title":"temperature  <code>property</code>","text":"<pre><code>temperature: float\n</code></pre> <p>Heat sink temperature</p>"},{"location":"api/#pypiezosystemsjena.NV200D.trigger_input_function","title":"trigger_input_function  <code>property</code> <code>writable</code>","text":"<pre><code>trigger_input_function: TriggerInputFunction\n</code></pre> <p>Function to run on trigger input</p>"},{"location":"api/#pypiezosystemsjena.NV200D.triggering_edge","title":"triggering_edge  <code>property</code> <code>writable</code>","text":"<pre><code>triggering_edge: TriggerEdge\n</code></pre> <p>Which edge to trigger on</p>"},{"location":"api/#pypiezosystemsjena.NV200D.upper_motion_range_limit","title":"upper_motion_range_limit  <code>property</code>","text":"<pre><code>upper_motion_range_limit: float\n</code></pre> <p>Upper motion range limit of piezo</p>"},{"location":"api/#pypiezosystemsjena.NV200D.upper_voltage_range_limit","title":"upper_voltage_range_limit  <code>property</code>","text":"<pre><code>upper_voltage_range_limit: float\n</code></pre> <p>Upper voltage range limit of piezo</p>"},{"location":"api/#pypiezosystemsjena.NV200D-functions","title":"Functions","text":""},{"location":"api/#pypiezosystemsjena.NV200D.read_data_recorder","title":"read_data_recorder","text":"<pre><code>read_data_recorder(\n    channel: DataRecorderBuffer,\n    index: Optional[int] = None,\n    length: Optional[int] = None,\n)\n</code></pre> <p>Read the data from the buffer on chosen channel.</p> <p>If index and length are not supplied the entire contents of the buffer        will read out for the chosen buffer.</p> <p>Parameters:</p> <ul> <li> <code>channel</code>             (<code>DataRecorderBuffer</code>)         \u2013          <p>data buffer</p> </li> <li> <code>index</code>             (<code>Optional[int]</code>, default:                 <code>None</code> )         \u2013          <p>first value to read out of buffer</p> </li> <li> <code>length</code>             (<code>Optional[int</code>, default:                 <code>None</code> )         \u2013          <p>number of values to read out of buffer</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[float]</code>         \u2013          <p>list of recorded data</p> </li> </ul>"},{"location":"api/#pypiezosystemsjena.list_status_codes","title":"pypiezosystemsjena.list_status_codes","text":"<pre><code>list_status_codes(status: int) -&gt; List[int]\n</code></pre> <p>Convert status bitset to list of active status codes</p> <p>The NV200D controller maintains its status as a 16bit register of bit flags.    For each high bit found in the bit set we return an integer from 0-15 to     represent the relevent status code found.</p> <p>Parameters:</p> <ul> <li> <code>status</code>             (<code>int</code>)         \u2013          <p>result of NV200D.status</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>List[int]</code>         \u2013          <p>list of active codes</p> </li> </ul>"},{"location":"api/#pypiezosystemsjena.current_status","title":"pypiezosystemsjena.current_status","text":"<pre><code>current_status(status: int) -&gt; dict\n</code></pre> <p>Parse NV200D statuse to dictionary of active statuses</p> <p>Convert the result of NV200D.status to a dictionary of all status codes     that could be available</p> <p>Parameters:</p> <ul> <li> <code>status</code>             (<code>int</code>)         \u2013          <p>result of NV200D.status</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dict</code>         \u2013          <p>active statuses</p> </li> </ul>"},{"location":"api/#pypiezosystemsjena.Connection","title":"pypiezosystemsjena.Connection","text":"<p>             Bases: <code>Enum</code></p> <p>Connection type for NV200D</p> <p>Used to specify use of serial port or network connection</p>"},{"location":"api/#pypiezosystemsjena.Connection-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.Connection.ethernet","title":"ethernet  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ethernet = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.Connection.usb","title":"usb  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>usb = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ControlMode","title":"pypiezosystemsjena.ControlMode","text":"<p>             Bases: <code>Enum</code></p> <p>Active control mode of NV200D</p>"},{"location":"api/#pypiezosystemsjena.ControlMode-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.ControlMode.feedback","title":"feedback  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>feedback = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ControlMode.feedforward","title":"feedforward  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>feedforward = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ControlMode.identification","title":"identification  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>identification = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ControlMode.pid","title":"pid  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pid = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SensorType","title":"pypiezosystemsjena.SensorType","text":"<p>             Bases: <code>Enum</code></p> <p>Type of sensor fitted to current attached piezo device</p>"},{"location":"api/#pypiezosystemsjena.SensorType-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.SensorType.actuator_without_position_sensor","title":"actuator_without_position_sensor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actuator_without_position_sensor = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SensorType.capacitve_sensor","title":"capacitve_sensor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>capacitve_sensor = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SensorType.strain_guage_sensor","title":"strain_guage_sensor  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>strain_guage_sensor = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.LoopMode","title":"pypiezosystemsjena.LoopMode","text":"<p>             Bases: <code>Enum</code></p> <p>Open or closed loop operation</p>"},{"location":"api/#pypiezosystemsjena.LoopMode-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.LoopMode.closed","title":"closed  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closed = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.LoopMode.open","title":"open  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>open = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ModulationSource","title":"pypiezosystemsjena.ModulationSource","text":"<p>             Bases: <code>Enum</code></p> <p>Source of control signal for device setpoint</p>"},{"location":"api/#pypiezosystemsjena.ModulationSource-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.ModulationSource.analogue_in","title":"analogue_in  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>analogue_in = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ModulationSource.awg","title":"awg  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>awg = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ModulationSource.spi","title":"spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>spi = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ModulationSource.usb_or_ethernet","title":"usb_or_ethernet  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>usb_or_ethernet = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource","title":"pypiezosystemsjena.MonitorSource","text":"<p>             Bases: <code>Enum</code></p> <p>Source of data for analogue output</p>"},{"location":"api/#pypiezosystemsjena.MonitorSource-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.MonitorSource.absolute_position_error","title":"absolute_position_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>absolute_position_error = 4\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.piezo_current_1","title":"piezo_current_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_current_1 = 6\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.piezo_current_2","title":"piezo_current_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_current_2 = 7\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.piezo_voltage","title":"piezo_voltage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_voltage = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.position_close_loop","title":"position_close_loop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_close_loop = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.position_error","title":"position_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_error = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.position_open_loop","title":"position_open_loop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_open_loop = 5\n</code></pre>"},{"location":"api/#pypiezosystemsjena.MonitorSource.setpoint","title":"setpoint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>setpoint = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ArbitraryWaveformGeneratorRun","title":"pypiezosystemsjena.ArbitraryWaveformGeneratorRun","text":"<p>             Bases: <code>Enum</code></p> <p>Set whether to start or stop the AWG</p>"},{"location":"api/#pypiezosystemsjena.ArbitraryWaveformGeneratorRun-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.ArbitraryWaveformGeneratorRun.start","title":"start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>start = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.ArbitraryWaveformGeneratorRun.stop","title":"stop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stop = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderBuffer","title":"pypiezosystemsjena.DataRecorderBuffer","text":"<p>             Bases: <code>Enum</code></p> <p>Which data buffer to read from</p>"},{"location":"api/#pypiezosystemsjena.DataRecorderBuffer-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.DataRecorderBuffer.a","title":"a  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>a = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderBuffer.b","title":"b  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>b = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource","title":"pypiezosystemsjena.DataRecorderSource","text":"<p>             Bases: <code>Enum</code></p> <p>Source of data to be stored in data recorder buffer</p>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.DataRecorderSource.abs_position_error","title":"abs_position_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>abs_position_error = 4\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.piezo_current_1","title":"piezo_current_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_current_1 = 6\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.piezo_current_2","title":"piezo_current_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_current_2 = 7\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.piezo_position","title":"piezo_position  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_position = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.piezo_position_2","title":"piezo_position_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_position_2 = 5\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.piezo_voltage","title":"piezo_voltage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_voltage = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.position_error","title":"position_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_error = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderSource.setpoint","title":"setpoint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>setpoint = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderStartMode","title":"pypiezosystemsjena.DataRecorderStartMode","text":"<p>             Bases: <code>Enum</code></p> <p>Autostart mode of data recorder</p>"},{"location":"api/#pypiezosystemsjena.DataRecorderStartMode-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.DataRecorderStartMode.grun","title":"grun  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>grun = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderStartMode.off","title":"off  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>off = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.DataRecorderStartMode.set","title":"set  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>set = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction","title":"pypiezosystemsjena.TriggerInputFunction","text":"<p>             Bases: <code>Enum</code></p> <p>Function to run on trigger input</p>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.TriggerInputFunction.awg_start","title":"awg_start  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>awg_start = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction.awg_step","title":"awg_step  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>awg_step = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction.awg_sync","title":"awg_sync  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>awg_sync = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction.ilc_sync","title":"ilc_sync  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ilc_sync = 4\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction.none","title":"none  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>none = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerInputFunction.start_data_recorder","title":"start_data_recorder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>start_data_recorder = 5\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerEdge","title":"pypiezosystemsjena.TriggerEdge","text":"<p>             Bases: <code>Enum</code></p> <p>Edge to trigger on</p>"},{"location":"api/#pypiezosystemsjena.TriggerEdge-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.TriggerEdge.both","title":"both  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>both = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerEdge.falling","title":"falling  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>falling = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerEdge.off","title":"off  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>off = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.TriggerEdge.rising","title":"rising  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rising = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor","title":"pypiezosystemsjena.SPIMonitor","text":"<p>             Bases: <code>Enum</code></p> <p>Return value for SPI monitor</p>"},{"location":"api/#pypiezosystemsjena.SPIMonitor-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.SPIMonitor.abs_position_error","title":"abs_position_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>abs_position_error = 5\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.piezo_current_1","title":"piezo_current_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_current_1 = 7\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.piezo_current_2","title":"piezo_current_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_current_2 = 8\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.piezo_voltage","title":"piezo_voltage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>piezo_voltage = 3\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.position_closed_loop","title":"position_closed_loop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_closed_loop = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.position_error","title":"position_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_error = 4\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.position_open_loop","title":"position_open_loop  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>position_open_loop = 6\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.setpoint","title":"setpoint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>setpoint = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIMonitor.zero","title":"zero  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>zero = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIControlLoopInterupt","title":"pypiezosystemsjena.SPIControlLoopInterupt","text":"<p>             Bases: <code>Enum</code></p> <p>PID control loop interupt source</p>"},{"location":"api/#pypiezosystemsjena.SPIControlLoopInterupt-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.SPIControlLoopInterupt.interal","title":"interal  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>interal = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPIControlLoopInterupt.spi","title":"spi  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>spi = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPISetpoint","title":"pypiezosystemsjena.SPISetpoint","text":"<p>             Bases: <code>Enum</code></p> <p>Datatype of last received setpoint over SPI</p>"},{"location":"api/#pypiezosystemsjena.SPISetpoint-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.SPISetpoint.decimal","title":"decimal  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>decimal = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPISetpoint.hex","title":"hex  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hex = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.SPISetpoint.stroke_or_voltage","title":"stroke_or_voltage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stroke_or_voltage = 2\n</code></pre>"},{"location":"api/#pypiezosystemsjena.LearningCorrectionType","title":"pypiezosystemsjena.LearningCorrectionType","text":"<p>             Bases: <code>Enum</code></p> <p>Correction type in frequency domain of itertive learning control method</p>"},{"location":"api/#pypiezosystemsjena.LearningCorrectionType-attributes","title":"Attributes","text":""},{"location":"api/#pypiezosystemsjena.LearningCorrectionType.no_learning","title":"no_learning  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>no_learning = 0\n</code></pre>"},{"location":"api/#pypiezosystemsjena.LearningCorrectionType.offline_identification","title":"offline_identification  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>offline_identification = 1\n</code></pre>"},{"location":"api/#pypiezosystemsjena.LearningCorrectionType.online_identification","title":"online_identification  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>online_identification = 2\n</code></pre>"}]}